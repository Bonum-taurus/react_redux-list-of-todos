{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","status","query","initialParams","filterReducer","params","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","filterTodos","completed","title","includes","length","className","map","id","userId","onClick","todoActions","TodoFilter","onSubmit","event","preventDefault","onChange","filterActions","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isSpinner","setIsSpinner","finally","href","email","name","App","useEffect","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.332e834d.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET': {\n      return action.payload;\n    }\n\n    case 'currentTodo/REMOVE': {\n      return null;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type ChangeStatus = { type: 'filter/STATUS', payload: string };\ntype ChangeByQuery = { type: 'filter/QUERY', payload: string };\n\ntype Action = ChangeStatus | ChangeByQuery;\n\nconst changeStatus = (status: string): ChangeStatus => ({\n  type: 'filter/STATUS', payload: status,\n});\nconst changeByQuery = (query: string): ChangeByQuery => ({\n  type: 'filter/QUERY', payload: query,\n});\n\nexport const actions = { changeStatus, changeByQuery };\n\ntype ParamsFilter = {\n  query: string,\n  status: string,\n};\n\nconst initialParams: ParamsFilter = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (params = initialParams, action: Action) => {\n  switch (action.type) {\n    case 'filter/STATUS': {\n      return {\n        ...params,\n        status: action.payload,\n      };\n    }\n\n    case 'filter/QUERY': {\n      return {\n        ...params,\n        query: action.payload,\n      };\n    }\n\n    default:\n      return params;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodos = { type: 'todos/SET', payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodos => ({\n  type: 'todos/SET', payload: todos,\n});\n\nexport const actions = { setTodos };\n\nconst todosReducer = (todos: Todo[] = [], action: SetTodos): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET': {\n      return [...action.payload];\n    }\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { actions as todoActions } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const filterTodos = () => {\n    switch (status) {\n      case 'active': {\n        const filteredTodos = todos.filter(todo => !todo.completed);\n\n        return filteredTodos.filter(todo => todo.title.includes(query));\n      }\n\n      case 'completed': {\n        const filteredTodos = todos.filter(todo => todo.completed);\n\n        return filteredTodos.filter(todo => todo.title.includes(query));\n      }\n\n      default:\n        return todos.filter(todo => todo.title.includes(query));\n    }\n  };\n\n  const handleClickInfoTodo = (todo: Todo) => () => {\n    dispatch(todoActions.setTodo(todo));\n  };\n\n  return (\n    <>\n      {!filterTodos().length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filterTodos().map(({\n              id, title, completed, userId,\n            }) => (\n              <tr key={id} data-cy=\"todo\">\n                <td className=\"is-vcentered\">{id}</td>\n                <td className=\"is-vcentered\">\n                  {completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={`has-text${completed ? '-success' : '-danger'}`}\n                  >\n                    {title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    onClick={handleClickInfoTodo({\n                      id, title, completed, userId,\n                    })}\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                  >\n                    <span className=\"icon\">\n                      <i className={currentTodo?.id === id ? 'far fa-eye-slash' : 'far fa-eye'} />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query } = useAppSelector(state => state.filter);\n\n  const changeStatus = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => dispatch(filterActions.changeStatus(event.target.value));\n\n  const changeByQuery = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => dispatch(filterActions.changeByQuery(event.target.value));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={changeStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          onChange={changeByQuery}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(filterActions.changeByQuery(''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as todoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isSpinner, setIsSpinner] = useState(true);\n\n  const dispatch = useAppDispatch();\n  const todo = useAppSelector(state => state.currentTodo);\n\n  if (todo) {\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setIsSpinner(false));\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isSpinner ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(todoActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{todo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isSpinner, setIsSpinner] = useState(true);\n  const dispatch = useAppDispatch();\n  const todo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => dispatch(todosActions.setTodos(todos)))\n      .finally(() => setIsSpinner(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {isSpinner ? (\n              <Loader />\n            ) : (\n              <>\n                <h1 className=\"title\">Todos:</h1>\n\n                <div className=\"block\">\n                  <TodoFilter />\n                </div>\n\n                <div className=\"block\">\n                  <TodoList />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {todo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}